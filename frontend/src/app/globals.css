/* =============== YOUR ORIGINAL CSS =============== */
/* stylelint-disable at-rule-no-unknown */

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* --- Mobile Centering --- */
@media (max-width: 991.98px) { /* Targets screens smaller than the 'lg' breakpoint */
  #basic-navbar-nav .navbar-nav {
    /* Centers the nav items (like Home, Plan, etc.) within the collapsed menu */
    align-items: center;
  }
  /* Reset auto margins used for desktop centering/alignment if they cause issues */
  #basic-navbar-nav .navbar-nav.mx-auto {
    margin-left: 0 !important;
    margin-right: 0 !important;
  }
}

/* --- Text-Width Orange Underline Hover Effect --- */

/* Base Nav Link adjustments (ensure no default underlines) */
.navbar-nav .nav-link {
  text-decoration: none !important; /* Force no default underline */
  padding-top: 0.5rem; /* Ensure consistent padding */
  padding-bottom: 0.5rem; /* Ensure consistent padding */
  /* Keep position relative if you want effects relative to the whole link area */
  /* position: relative; */
}

/* Wrapper Span for the text content inside the Nav.Link */
.nav-link-text-underline {
  position: relative; /* Context for the ::after pseudo-element */
  display: inline-block; /* Crucial: Makes the span width fit its content */
  padding-bottom: 2px; /* Add a little space below text for the line */
}

/* The orange line pseudo-element attached to the wrapper span */
.nav-link-text-underline::after {
  content: "";
  position: absolute;
  left: 0;
  bottom: -2px; /* Position below the span (adjust as needed) */
  height: 2px; /* Line thickness */
  background-color: #FF6F00; /* Your orange color */

  /* Animation */
  width: 0; /* Start with zero width */
  transition: width 0.3s ease-in-out;
}

/* When the parent Nav.Link is hovered, animate the ::after of the inner span */
.navbar-nav .nav-link:hover .nav-link-text-underline::after {
  width: 100%; /* Animate width to 100% of the span */
}

html,
body {
  margin: 0;
  padding: 0;
  height: 100%;
}

.pageWrapper {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

.mainContent {
  flex: 1;
}

.dropdown {
  position: relative;
  display: inline-block;
}

.dropdown-btn {
  padding: 10px;
  cursor: pointer;
  border:none;
}

.dropdown-content {
  display: none;
  position: absolute;
  background-color: #fff;
  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
  padding: 20px;
  z-index: 1;
}

.dropdown-content .passenger-type {
  display: flex;
  align-items: center;
  margin-bottom: 10px;
}

.minus-btn, .plus-btn {
  width: 30px;
  height: 30px;
  background-color: #5db5d0;
  color: white;
  border: none;
  cursor: pointer;
  font-size: 16px;
}

input[type="number"] {
  width: 50px;
  text-align: center;
}

.submit-btn {
  background-color: #5db5d0;
  color: white;
  padding: 10px;
  border: none;
  cursor: pointer;
}

.navbar {
  background-image: linear-gradient(to right, #000000, #000000);
  font-weight: 500;
  letter-spacing: 2px;
}

.nav-link {
  transition: all 0.3s ease;
  position: relative;
}



/* --- Existing CSS for reference --- */
.modern-form-container {
  background-color: white;
  padding: 1rem 1.5rem;
  border-radius: 0.5rem;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  display: flex;
  flex-wrap: wrap;
  gap: 0;
  align-items: flex-end; /* Align items to bottom for consistent underline */
}

.modern-input-group {
  display: flex;
  flex-direction: column;
  flex: 1 1 auto;
  padding: 0.5rem 1rem;
  min-width: 150px;
  position: relative;
}

.modern-input-group:not(:last-child)::after {
  content: "";
  position: absolute;
  right: 0;
  top: 25%; /* Adjust vertical position of divider */
  bottom: 15%;
  width: 1px;
  background-color: #e0e0e0;
}

.modern-input-label {
  font-size: 0.75rem; /* Small label */
  color: #6c757d;
  margin-bottom: 0.25rem; /* Space between label and input */
  text-align: left;
}

/* === UPDATED/NEW CSS RULES === */

/* Base styling for ALL inputs (including Typeahead's inner input) */
.modern-input {
  border: none !important; /* Remove all borders */
  border-bottom: 1px solid #ced4da !important; /* Default subtle gray underline */
  padding: 0.375rem 0.1rem !important; /* Adjust padding as needed */
  font-size: 1rem;
  background-color: transparent !important; /* Ensure transparent background */
  width: 100%;
  outline: none !important; /* Remove default browser outline */
  box-shadow: none !important; /* Remove bootstrap shadows */
  border-radius: 0 !important; /* Ensure no rounded corners interfere */
  transition: border-color 0.15s ease-in-out;
}

/* Style for focus state on ALL inputs */
.modern-input:focus {
  border-bottom: 2px solid #FF6F00 !important; /* Thicker orange underline on focus */
  box-shadow: none !important; /* Ensure no focus shadow */
}

/* Specific overrides for React Bootstrap Typeahead elements */
/* Remove border/padding from Typeahead wrapper divs */
.modern-input-group .rbt,
.modern-input-group .rbt .rbt-input-wrapper {
    border: none !important;
    padding: 0 !important;
    margin: 0 !important;
    background-color: transparent !important;
    box-shadow: none !important;
    /* Ensure the wrapper aligns with the label */
    display: block !important;
}

/* Target the actual input generated *inside* Typeahead */
.modern-input-group .rbt .rbt-input-main {
  /* Inherit from .modern-input */
  /* Already handled by inputProps={{ className: 'modern-input' }} */
  /* Add specific overrides if needed, e.g., for height/line-height */
  height: auto; /* Adjust if needed */
}

/* Ensure focus style applies correctly to Typeahead's input */
.modern-input-group .rbt .rbt-input-main:focus {
   /* Inherits from .modern-input:focus */
   box-shadow: none !important; /* Re-ensure no shadow */
}

/* Style for the dropdown menu if needed */
.modern-input-group .rbt .dropdown-menu {
  margin-top: 2px; /* Optional: Add space below underline */
  border-radius: 0.25rem;
  border: 1px solid #dee2e6;
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
}

/* Styling for the Passenger Button to match */
.modern-passenger-btn {
  border: none;
  border-bottom: 1px solid #ced4da; /* Match default underline */
  background-color: transparent;
  text-align: left;
  padding: 0.375rem 0.1rem; /* Match input padding */
  width: 100%;
  font-size: 1rem;
  color: #212529; /* Or match input text color */
  border-radius: 0;
  transition: border-color 0.15s ease-in-out;
  outline: none;
}
.modern-passenger-btn:focus {
   border-bottom: 2px solid #FF6F00; /* Match focus underline */
   box-shadow: none;
   outline: none;
}
/* Remove Bootstrap's default button focus outline if it appears */
.modern-passenger-btn:focus-visible {
    outline: none !important;
    box-shadow: none !important;
}

/* Add this to your CSS file if needed */

/* Target the input wrapper generated by react-datepicker */
.modern-input-group .react-datepicker-wrapper {
  width: 100%; /* Ensure it takes full width */
  display: block; /* Override potential inline display */
}

/* Target the actual input inside react-datepicker */
.modern-input-group .react-datepicker-wrapper input.modern-input {
  /* It should inherit most styles from .modern-input */
  /* Add specific overrides if necessary */
  background-color: transparent !important; /* Re-ensure background */
}

/* Ensure focus style is applied correctly */
.modern-input-group .react-datepicker-wrapper input.modern-input:focus {
  border-bottom: 2px solid #FF6F00 !important;
  box-shadow: none !important;
}

/* --- Custom React Datepicker Styles --- */
/* Apply these styles in a global CSS file or a dedicated CSS file imported into your component/app */

/* Main popup container */
.react-datepicker-wrapper { /* Ensure wrapper takes full width for alignment */
  display: block;
  width: 100%;
}

.react-datepicker-popper {
  z-index: 1050 !important; /* Ensure it appears above other elements if needed */
}

.react-datepicker {
font-family: inherit; /* Use website font */
border: 1px solid #495057; /* Darker border */
border-radius: 0.5rem; /* Rounded corners */
background-color: #212529; /* Dark background */
color: #dee2e6; /* Light default text */
box-shadow: 0 8px 20px rgba(0, 0, 0, 0.4);
padding: 0.5rem; /* Add some internal padding */
}

/* Remove the default small triangle pointer if desired */
.react-datepicker__triangle {
display: none;
}

/* Header section (Month/Year, Navigation) */
.react-datepicker__header {
background-color: #343a40; /* Slightly lighter dark background */
border-bottom: 1px solid #495057;
/* Adjust radius to match main container if padding is added */
border-top-left-radius: calc(0.5rem - 1px);
border-top-right-radius: calc(0.5rem - 1px);
padding: 0.8em 0; /* Vertical padding */
}

/* Month/Year text */
.react-datepicker__current-month {
color: #fff;
font-weight: 600;
font-size: 1rem;
padding-bottom: 0; /* Remove default bottom padding */
margin-bottom: 0.8rem; /* Add margin instead */
}

/* Navigation Arrows Styling */
.react-datepicker__navigation {
top: 1rem; /* Adjust vertical position */
outline: none; /* Remove focus outline */
}
.react-datepicker__navigation--previous {
 border-right-color: #adb5bd; /* Gray arrow color */
}
.react-datepicker__navigation--previous:hover {
 border-right-color: #fff;
}
.react-datepicker__navigation--next {
 border-left-color: #adb5bd;
}
.react-datepicker__navigation--next:hover {
 border-left-color: #fff;
}
/* Make arrows slightly bigger/easier to click */
.react-datepicker__navigation-icon::before {
  border-width: 2px 2px 0 0;
  height: 8px;
  width: 8px;
}


/* Day Names (Su, Mo, Tu...) */
.react-datepicker__day-names {
margin-bottom: 0.2rem; /* Space above days */
}
.react-datepicker__day-name {
color: #adb5bd; /* Lighter gray for day names */
font-weight: 600;
font-size: 0.8rem;
margin: 0.25rem; /* Adjust spacing between names */
width: 2rem; /* Ensure consistent width */
line-height: 1.5rem;
}

/* Individual Day Cells */
.react-datepicker__day {
color: #dee2e6; /* Default day text color */
border-radius: 50%; /* Circular shape */
margin: 0.25rem; /* Spacing around day */
width: 2rem;
height: 2rem;
line-height: 2rem; /* Center text vertically */
font-weight: 400;
outline: none;
transition: background-color 0.2s ease, color 0.2s ease;
}

/* Hover effect for days */
.react-datepicker__day:hover {
background-color: #FF6F00 !important; /* Darker gray hover */
color: #FFF;
border-radius: 50%;
}

/* Selected day */
.react-datepicker__day--selected,
.react-datepicker__day--in-selecting-range, /* Style for range selection if used */
.react-datepicker__day--in-range { /* Style for range selection if used */
background-color: #FF6F00 !important; /* Orange background */
color: #ffffff !important; /* White text */
border-radius: 50% ;
font-weight: bold;
}
/* Ensure hover on selected/range day doesn't change background */
.react-datepicker__day--selected:hover,
.react-datepicker__day--in-selecting-range:hover,
.react-datepicker__day--in-range:hover {
 background-color: #FF6F00;
}


/* Today's date */
.react-datepicker__day--today {
font-weight: bold;
/* Optional: Add a subtle ring/border instead of background */
 /* background-color: transparent; */
 /* border: 1px solid #FF6F00; */
 /* Or just use a different text color */
 color: #FFc107; /* Example: Yellowish color for today */
}
.react-datepicker__day--today:hover {
 background-color: #495057; /* Keep hover consistent */
 color: #fff; /* Ensure text is readable on hover */
}
/* Reset selected style if today is selected */
.react-datepicker__day--selected.react-datepicker__day--today {
  color: #fff !important;
  background-color: #FF6F00 !important; /* Ensure selected style overrides today style */
  border: none; /* Remove border if selected */
}


/* Dates outside the current month */
.react-datepicker__day--outside-month {
color: #495057; /* Dimmer text */
background-color: transparent;
pointer-events: none; /* Make them unclickable */
}

/* --- Custom Orange Button and UI Element Styling --- */
/* Add this to your global CSS (e.g., globals.css) or an imported CSS file */

/* Primary buttons */
.btn-primary {
  background-color: #FF6F00 !important;
  border-color: #FF6F00 !important;
  color: white !important;
  transition: all 0.3s ease !important;
  box-shadow: 0 2px 5px rgba(255, 111, 0, 0.2) !important;
}

.btn-primary:hover, .btn-primary:focus {
  background-color: #e66400 !important;
  border-color: #e66400 !important;
  box-shadow: 0 4px 8px rgba(255, 111, 0, 0.3) !important;
  transform: translateY(-1px) !important;
}

/* Outline buttons */
.btn-outline-primary {
  color: #FF6F00 !important;
  border-color: #FF6F00 !important;
  transition: all 0.3s ease !important;
}

.btn-outline-primary:hover, .btn-outline-primary:focus {
  background-color: #FF6F00 !important;
  color: white !important;
  box-shadow: 0 4px 8px rgba(255, 111, 0, 0.2) !important;
  transform: translateY(-1px) !important;
}

/* Secondary buttons */
.btn-outline-secondary:hover {
  border-color: #FF6F00 !important;
  background-color: #FF6F00 !important;
  color: white !important;
}

/* Price text */
.text-primary {
  color: #FF6F00 !important;
}

/* Spinner */
.spinner-border.text-primary {
  color: #FF6F00 !important;
}

/* Target radio buttons specifically when checked */
.form-check-input[type="radio"]:checked {
  background-color: #FF6F00; /* Your desired orange */
  border-color: #e66400;     /* Slightly darker orange for border (optional) */
  box-shadow: 0 0 0 0.25rem rgba(255, 111, 0, 0.25); /* Optional: Orange focus glow */

  /* Replace Bootstrap's default checkmark SVG with one visible on orange.
     This example uses an encoded SVG for a simple white dot/circle.
     Adjust viewBox/radius (r='...') if needed. */
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='2' fill='%23fff'/%3e%3c/svg%3e");
}

/* --- Custom Navbar Toggle Button (Burger/X Animation) --- */

/* Style the button itself */
.custom-navbar-toggle {
  border: none !important; /* Remove default bootstrap border */
  padding: 0 !important; /* Remove default padding */
  background-color: transparent !important; /* Ensure no background */
  width: 30px; /* Adjust size as needed */
  height: 24px; /* Adjust size as needed */
  position: relative;
  transition: all 0.3s ease-in-out;
  /* Remove default focus outline */
  box-shadow: none !important;
  outline: none !important;
}

/* Hide the default Bootstrap lines/icon */
.custom-navbar-toggle .navbar-toggler-icon {
  display: none;
}

/* Create the lines using ::before and ::after pseudo-elements */
.custom-navbar-toggle::before,
.custom-navbar-toggle::after {
  content: '';
  display: block;
  position: absolute;
  height: 3px; /* Line thickness */
  width: 100%;
  background: white; /* Line color (for dark navbar) */
  border-radius: 9px;
  left: 0;
  transform: rotate(0deg);
  transition: all .25s ease-in-out;
}

/* Top line positioning */
.custom-navbar-toggle::before {
  top: 0px;
  transform-origin: left center;
}

/* Bottom line positioning */
.custom-navbar-toggle::after {
  /* Position bottom line relative to button height and line thickness */
  top: calc(100% - 3px);
  transform-origin: left center;
}

/* We need a middle line. Let's add an inner span for it if needed,
   or try animating top/bottom only. Let's add a span for better control */

/* Add this empty span INSIDE the <Navbar.Toggle> in your JSX if you need the middle line */
/* <Navbar.Toggle ... className="custom-navbar-toggle"> <span className="middle-line"></span> </Navbar.Toggle> */

.custom-navbar-toggle span.middle-line { /* If you add the span */
    display: block;
    position: absolute;
    height: 3px; /* Line thickness */
    width: 100%;
    background: white; /* Line color */
    border-radius: 9px;
    opacity: 1;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    transform-origin: left center;
    transition: all .25s ease-in-out;
}

/* --- Navbar Customizations --- */

/* Ensure underline effect applies to dropdown toggle */
/* (Make sure the base .nav-link-text-underline styles exist) */
.navbar-nav .nav-link:hover .nav-link-text-underline::after,
.navbar-nav .dropdown-toggle:hover .nav-link-text-underline::after { /* Target dropdown too */
  width: 100%;
}

/* Hide default caret on the Manage dropdown toggle */
/* Targeting the specific ID is safest */
#manage-admin-dropdown.dropdown-toggle::after {
    display: none !important;
}

/* Style the grid wrapper inside the dropdown menu (no change here) */
.manage-dropdown-grid-wrapper {
  display: grid;
  grid-template-columns: auto auto;
  gap: 0.25rem 1rem;
  padding: 0.5rem;
  justify-content: start;
}

/* Style the dropdown menu container itself */
#manage-admin-dropdown + .dropdown-menu {
  /* Keep existing styles */
  background-color: #000000 !important;
  border-color: #495057 !important;
  min-width: auto;
  width: max-content;
  padding: 0;

  /* --- POSITIONING ADJUSTMENT --- */
  position: absolute; /* Ensure positioning context allows 'left' */
  /* Adjust this negative value to shift the menu left */
  /* Try values like -30px, -40px, -50px, etc. */
  left: -175%;
  /* --- End POSITIONING ADJUSTMENT --- */

  /* Optional: You might need right: auto if default alignment conflicts */
  /* right: auto; */
}

/* Style the items within the grid (no change needed) */
#manage-admin-dropdown + .dropdown-menu .dropdown-item {
   /* ... existing styles ... */
   white-space: nowrap;
   padding: 0.4rem 0.8rem;
   color: #dee2e6;
   text-align: left;
   border-radius: 0.25rem;
   transition: background-color 0.15s ease-in-out, color 0.15s ease-in-out;
}

/* Hover/Focus styles (no change needed) */
#manage-admin-dropdown + .dropdown-menu .dropdown-item:hover,
#manage-admin-dropdown + .dropdown-menu .dropdown-item:focus {
 /* ... */
 background-color: #1c2126;
 color: #fff;
}

/* Active state (no change needed) */
#manage-admin-dropdown + .dropdown-menu .dropdown-item.active {
  /* ... */
  background-color: #FF6F00;
  color: #fff;
}

/* --- Custom Typeahead Grouped Menu Styles --- */

/* Style for the country header */
.airport-group-header {
  font-weight: bold;
  padding: 0.5rem 1rem; /* Adjust padding as needed */
  font-size: 0.9em;
  color: #6c757d; /* Bootstrap secondary text color */
  background-color: #f8f9fa; /* Example light grey background */
  border-bottom: 1px solid #dee2e6; /* Keep separator line */
}

/* ... Keep other Typeahead styles (.airport-menu-item, .rbt-menu, etc.) ... */

/* Style for each airport item row */
.airport-menu-item {
  width: 100%; /* Ensure it takes full width */
  padding: 0.4rem 1rem; /* Adjust padding */
}

/* Style for the bolded airport/city name */
.airport-menu-item .airport-name {
  /* Already using fw-bold */
  text-overflow: ellipsis; /* Add ellipsis if name is too long */
  white-space: nowrap;
  overflow: hidden;
  margin-right: 0.5rem; /* Space before code */
}

/* Style for the airport code on the right */
.airport-menu-item .airport-code {
  /* Already using text-muted */
  font-size: 0.9em;
  white-space: nowrap; /* Prevent code wrapping */
}

/* Optional: Ensure the dropdown menu can scroll */
.rbt-menu .dropdown-header.airport-group-header {
  /* Keep your desired visual styles */
  font-weight: bold;
  padding: 0.5rem 1rem;
  font-size: 0.9em;
  color: #6c757d;
  background-color: #f8f9fa; /* Light grey background */
  border-bottom: 1px solid #dee2e6;

  /* --- Ensure non-sticky positioning --- */
  position: static !important; /* Override sticky with static */
  top: auto !important;        /* Reset any 'top' value */
  z-index: auto !important;   /* Reset any z-index */
}

/* --- End Navbar Customizations --- */


/* --- Animation when Navbar is OPEN --- */
/* Bootstrap adds .collapsed when the menu is closed. */
/* So, :not(.collapsed) means the menu is open (button was clicked) */

/* Rotate top bar */
.custom-navbar-toggle:not(.collapsed)::before {
  transform: rotate(45deg);
  top: -2px; /* Adjust positioning for 'X' */
  left: 4px; /* Adjust positioning for 'X' */
}

/* Fade out middle bar */
.custom-navbar-toggle:not(.collapsed) span.middle-line { /* Only if using middle span */
  width: 0%;
  opacity: 0;
}

/* Rotate bottom bar */
.custom-navbar-toggle:not(.collapsed)::after {
  transform: rotate(-45deg);
  top: calc(100% - 5px); /* Adjust positioning for 'X' */
  left: 4px; /* Adjust positioning for 'X' */
}

/* Optional: Customize focus style when *not* checked if desired */
/* .form-check-input[type="radio"]:focus { */
   /* Default Bootstrap focus is usually okay */
   /* border-color: #ffad7a; */
   /* box-shadow: 0 0 0 0.25rem rgba(255, 111, 0, 0.25); */
/* } */

/* Ensure disabled days look distinct */
.react-datepicker__day--disabled {
  color: #b6b8ba !important; /* Very dim text */
  background-color: transparent !important;
  pointer-events: none;
}

/* --- End Custom Styles --- */

/* ... more custom styles for the calendar popup if desired ... */

/* === END OF UPDATED/NEW CSS RULES === */


/* --- Rest of your existing CSS --- */
/* ... modern-dropdown-content, search-btn, etc. ... */


/* Dropdown Content Styling */
.modern-dropdown-content {
  border-radius: 0.5rem !important; /* Override potential inline style */
  min-width: 280px !important; /* Wider dropdown */
  /* Use Bootstrap classes like 'shadow', 'border', 'bg-white', 'p-3', 'mt-2' */
}

.modern-dropdown-content .passenger-type {
  padding: 0.5rem 0;
}
.modern-dropdown-content .passenger-type:not(:last-child) {
  border-bottom: 1px solid #eee;
}
.modern-dropdown-content label {
  font-weight: 500;
}

/* Search Button */
.modern-search-btn {
  padding: 0.75rem 1.5rem;
  border-radius: 50rem; /* Pill shape */
  font-weight: 600;
  background-color: #FF6F00 !important;
  color: white !important;
  border: none;
  transition: background-color 0.2s ease;
}
.modern-search-btn:hover {
  background-color: #e66400 !important; /* Darker orange on hover */
   color: white !important;
}

/* Adjust flex behavior and dividers for smaller screens if needed */
@media (max-width: 991.98px) {
  .modern-form-container {
    flex-direction: column;
    align-items: stretch;
    gap: 1rem; /* Add gap when stacking */
  }
  .modern-input-group {
     padding: 0.5rem; /* Adjust padding */
     border-bottom: 1px solid #eee; /* Add bottom border when stacked */
  }
  .modern-input-group:not(:last-child)::after {
     display: none; /* Hide vertical dividers when stacked */
  }
  .modern-input-group:last-child {
     border-bottom: none;
  }
  .modern-search-btn-wrapper {
    margin-top: 1rem;
    width: 100%;
  }
   .modern-search-btn {
     width: 100%;
   }
}

.custom-margin {
  margin-right: 0; /* default margin for mobile devices */
}

@media (min-width: 768px) {
  /* Apply the -5% margin on tablets and larger devices */
  .custom-margin {
    margin-right: -30%;
  }
}

.nav-link:hover::after {
  width: 100%;
}

.nav-link {
  font-weight: 500;
  letter-spacing: 0.5px;
  padding: 0.5rem 1rem;
}

.navbar-brand img {
  width: 50px;       /* small width that won't enlarge the navbar */
  height: 50px;
  transform: scale(5.0); /* make it look 1.5× bigger */
  transform-origin: center;
  /* Ensure it can overflow outside its box if needed: */
  display: inline-block;
  overflow: visible;
}

/* Container for the form */
#flightSearchForm {
  display: flex;
  align-items: center;
  gap: 1rem;
  flex-wrap: wrap;
}

/* Dropdown styling */
.dropdown {
  position: relative;
}

.dropdown-content {
  display: none;
  position: absolute;
  background-color: #f9f9f9;
  min-width: 200px;
  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
  z-index: 1;
}

.dropdown-btn {
  background-color: #FF6F00;
  color: white;
  border: none;
  padding: 0.5rem 1rem;
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 0 2px 5px rgba(255, 111, 0, 0.2);
}

.dropdown-btn:hover {
  background-color: #e66400;
  box-shadow: 0 4px 8px rgba(255, 111, 0, 0.3);
}

/* Button styling */
.search-btn {
  background-color: #FF6F00;
  color: white;
  padding: 0.5rem 1.5rem;
  border: none;
  border-radius: 4px;
  transition: all 0.3s ease;
  box-shadow: 0 2px 5px rgba(255, 111, 0, 0.2);
}

.search-btn:hover {
  background-color: #e66400;
  box-shadow: 0 4px 8px rgba(255, 111, 0, 0.3);
  transform: translateY(-1px);
}

/* Flexbox layout for inputs */
.d-flex {
  display: flex;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-3 {
  gap: 1rem;
}

.flex-wrap {
  flex-wrap: wrap;
}

.navbar ul {
  font-weight: 400;
  letter-spacing: 1.5px;
}

.c-item {
  height: 500px;
}

.c-img {
  height: 100%;
  object-fit: cover;
  filter: brightness(0.9);
}

@media screen and (max-width: 2560px)  and (min-width:1500px){
  .custom-margin {
    margin-left:8%;
  }
}

@media screen and (max-width: 1700px)  and (min-width:1023px){
  .custom-margin {
    margin-left:8%;
  }
}

@media screen and (max-width: 1023px)  and (min-width:768px){
  .custom-margin {
    margin-left:8%;
  }
}

@media screen and (max-width: 767px){
  .custom-margin {
    margin-left:8%;
  }
}

.card-img-top {
  width: 100%;
  height: 10vw;
  object-fit: cover;
}

/* =============== END OF YOUR ORIGINAL CSS =============== */
